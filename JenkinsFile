pipeline {
    agent any
    environment {
        PATH = "C:\\Users\\Nyamatulla\\AppData\\Local\\Programs\\Python\\Python312\\Scripts;${env.PATH}"
        DOCKER_IMAGE = "nyamatulla/flask-blog-app:${BUILD_NUMBER}"
        DOCKER_CONT = "flask-blog${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('dockerHub')
        
    }

    stages {
        stage('code checkout') {
            steps {
                git changelog: false, poll: false, url: 'https://github.com/Nyamatulla/Flask-Blog_app.git'
            }
        }

        /* stage('SonarQube Analysis') {
            steps {
                script {
                    // Define the SonarScanner tool
                    def scannerHome = tool 'sonar-scanner'

                    // Configure SonarQube environment
                    withSonarQubeEnv('sonar') {
                        // Run SonarScanner
                        bat "${scannerHome}/bin/sonar-scanner"
                    }
                }
            }
        } */

        stage('Install dependencies') {
            steps {
                bat 'pip install -r requirements.txt'
            }
        }
        stage('Static Application Security Testing (SAST)') {
             steps {
                echo 'performing SAST'
                bat 'pip install bandit'
                bat 'bandit -r app'
            }
        }
        stage('Dependency Scanning') {
             steps {
                bat 'pip install safety'
                bat 'safety check'
            }
        }
        stage('Docker build and Push') {
            steps {
               script {
                  bat "docker build -t ${DOCKER_IMAGE} ."
                  /*def dockerImage = docker.image("${DOCKER_IMAGE}")
                  docker.withRegistry('https://index.docker.io/v1/', "dockerHub") {
                      dockerImage.push()
                  } */
               }       
            }  
        } 
        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "Flask-Blog_app"
                GIT_USER_NAME = "Nyamatulla"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    bat '''
                         git config user.email "nyamatathani02@gmail.com"
                         git config user.name "Nyamatulla"
                         BUILD_NUMBER=${BUILD_NUMBER}
                         sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" k3s-manifest/deployment.yml
                         git add k3s-manifest/deployment.yml
                         git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                         git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:main
                    '''
                }
            }
        }
    }
}
